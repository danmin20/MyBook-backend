type User {
  id: ID! @id
  avatar: String
  name: String!
  email: String!
  followers: [User!]! @relation(name: "FollowRelation")
  following: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUser" onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser" onDelete: CASCADE)
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  user: User @relation(name: "PostsOfUser")
  sentiment: String!
  likes: [Like!]! @relation(name: "LikesOfPost" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPost" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  book: Book! @relation(link: INLINE)
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User! @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentsOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Book {
  id: ID! @id
  isbn: String!
  title: String!
  link: String
  image: String
  author: String!
  price: Int
  discount: Int
  publisher: String!
  description: String
  post: Post
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}